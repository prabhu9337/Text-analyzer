{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","Navbar","href","title","to","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7b579659.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     backgroundColor: 'white',\r\n    //     color: 'black'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode === 'dark'?'white':'black',\r\n        backgroundColor: props.mode === 'dark'?'#948f8f':'white',\r\n        border: '1px solid',\r\n        borderColor: props.mode === 'dark'?'white':'#948f8f'\r\n    }\r\n    return (\r\n        <div className=\"container\" >\r\n            <h2 className=\"my-2\" style={{color: props.mode === 'dark'?'white':'#042743'}}>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Analyze your text</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        Textutil gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        <strong>Free to use</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        Textutil is free to use. Textutil is reports the number of words and characters.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        <strong>Website Link</strong>\r\n                    </button>\r\n                    </h2>\r\n                  <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    <h4>https://prabhu9337.github.io/Text-analyzer/</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className={`form-check-label mx-3 text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n      </div>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handelUpClick = ()=> {\r\n        console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handelLoClick = ()=> {\r\n        console.log(\"Lowercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    const handelClearClick = ()=> {\r\n        console.log(\"Clear text was Clicked\" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Clear Text\", \"success\");\r\n    }\r\n    const handelCopy = ()=> {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to Clipboard\", \"success\");\r\n    }\r\n    const handelExtrSpaces = ()=> {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extraspaces\", \"success\");\r\n    }\r\n    const handelOnChange = (event)=> {\r\n        console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handelOnChange} style={{backgroundColor: props.mode === 'light'?'white':'#9e9898', color: props.mode === 'dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handelUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handelLoClick}>Convert to Lowecase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={handelClearClick}>Clear text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handelCopy}>Copy text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handelExtrSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Your text summery</h2>\r\n            <p>{text.length} characters & {text.split(\" \").filter((element)=>{return element.length!==0}).length} words</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=> {\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n  }\n  const toggleMode = ()=> {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n      // document.title = 'TextUtil - Darkmode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been Enabled\", \"success\")\n      document.title = 'TextUtil - Home';\n    }\n  }\n//   const [myStyle, setMyStyle] = useState({\n//     backgroundColor: 'white',\n//     color: 'black'\n// })\n// const [btnText, setBtnText] = useState(\"Enable Darkmode\")\n// const darkMode = ()=> {\n//     if(myStyle.color === 'white'){\n//         setMyStyle({\n//             backgroundColor: 'white',\n//             color: 'black'\n//         })\n//         setBtnText(\"Enable Darkmode\")\n//     }\n//     else{\n//         setMyStyle({\n//             backgroundColor: 'black',\n//             color: 'white',\n//             border: '1px solid white'\n//         })\n//         setBtnText(\"Enable Lightmode\")\n//     }\n// }\n  return (\n    <>\n      {/* <div className=\"body\"> */}\n      <Router>\n       <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n       <Alert alert={alert}/>\n       <div className=\"container my-3\">\n         <Switch>\n           <Route path=\"/about\">\n             <About mode={mode}/>\n           </Route>\n           <Route path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n           </Route>\n         </Switch>\n       </div>\n       {/* <button className=\"my-3 mx-2 bg-primary btn btn-dark\" onClick={darkMode}>{btnText}</button> */}\n       {/* </div> */}\n       </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}